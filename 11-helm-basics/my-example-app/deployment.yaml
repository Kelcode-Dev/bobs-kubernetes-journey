NAME: example-app
LAST DEPLOYED: Sun Nov 17 16:33:12 2024
NAMESPACE: kelcode-web
STATUS: pending-install
REVISION: 1
HOOKS:
---
# Source: my-example-app/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "example-app-my-example-app-test-connection"
  labels:
    helm.sh/chart: my-example-app-0.1.0
    app.kubernetes.io/name: my-example-app
    app.kubernetes.io/instance: example-app
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['example-app-my-example-app:80']
  restartPolicy: Never
MANIFEST:
---
# Source: my-example-app/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: example-app-my-example-app
  labels:
    helm.sh/chart: my-example-app-0.1.0
    app.kubernetes.io/name: my-example-app
    app.kubernetes.io/instance: example-app
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
---
# Source: my-example-app/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: example-app-my-example-app
  labels:
    helm.sh/chart: my-example-app-0.1.0
    app.kubernetes.io/name: my-example-app
    app.kubernetes.io/instance: example-app
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: my-example-app
    app.kubernetes.io/instance: example-app
---
# Source: my-example-app/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: example-app-my-example-app
  labels:
    helm.sh/chart: my-example-app-0.1.0
    app.kubernetes.io/name: my-example-app
    app.kubernetes.io/instance: example-app
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: my-example-app
      app.kubernetes.io/instance: example-app
  template:
    metadata:
      labels:
        helm.sh/chart: my-example-app-0.1.0
        app.kubernetes.io/name: my-example-app
        app.kubernetes.io/instance: example-app
        app.kubernetes.io/version: "1.16.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: example-app-my-example-app
      securityContext:
        {}
      containers:
        - name: my-example-app
          securityContext:
            {}
          image: "nginx:1.16.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}

NOTES:
1. Get the application URL by running these commands:
  export POD_NAME=$(kubectl get pods --namespace kelcode-web -l "app.kubernetes.io/name=my-example-app,app.kubernetes.io/instance=example-app" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace kelcode-web $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace kelcode-web port-forward $POD_NAME 8080:$CONTAINER_PORT
